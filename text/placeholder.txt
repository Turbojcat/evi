content = content.replace(/{user_nickname}/g, interaction.member.nickname || interaction.user.username);
content = content.replace(/{user_discriminator}/g, interaction.user.discriminator);
content = content.replace(/{user_tag}/g, interaction.user.tag);
content = content.replace(/{user_avatar_url}/g, interaction.user.displayAvatarURL({ dynamic: true }));
content = content.replace(/{user_created_at}/g, interaction.user.createdAt.toDateString());
content = content.replace(/{user_joined_at}/g, interaction.member.joinedAt.toDateString());
content = content.replace(/{user_roles}/g, interaction.member.roles.cache.map(role => role.name).join(', '));
content = content.replace(/{user_roles_mention}/g, interaction.member.roles.cache.map(role => `<@&${role.id}>`).join(' '));
content = content.replace(/{user_highest_role}/g, interaction.member.roles.highest.name);
content = content.replace(/{user_highest_role_color}/g, interaction.member.displayHexColor);
content = content.replace(/{user_status}/g, interaction.member.presence?.status || 'offline');
content = content.replace(/{user_activity}/g, interaction.member.presence?.activities.map(activity => activity.name).join(', ') || 'None');
content = content.replace(/{user_voice_channel}/g, interaction.member.voice.channel?.name || 'None');
content = content.replace(/{user_voice_channel_id}/g, interaction.member.voice.channelId || 'None');
content = content.replace(/{user_bot}/g, interaction.user.bot ? 'Yes' : 'No');
content = content.replace(/{user_permissions}/g, interaction.member.permissions.toArray().join(', '));
content = content.replace(/{user_kickable}/g, interaction.member.kickable ? 'Yes' : 'No');
content = content.replace(/{user_bannable}/g, interaction.member.bannable ? 'Yes' : 'No');
content = content.replace(/{user_manageable}/g, interaction.member.manageable ? 'Yes' : 'No');
content = content.replace(/{user_premium_since}/g, interaction.member.premiumSince?.toDateString() || 'Not a Nitro Booster');
content = content.replace(/{user_pending}/g, interaction.member.pending ? 'Yes' : 'No');
content = content.replace(/{user_last_message}/g, interaction.channel.messages.cache.find(m => m.author.id === interaction.user.id)?.content || 'None');
content = content.replace(/{user_last_message_id}/g, interaction.channel.messages.cache.find(m => m.author.id === interaction.user.id)?.id || 'None');
content = content.replace(/{user_last_message_url}/g, interaction.channel.messages.cache.find(m => m.author.id === interaction.user.id)?.url || 'None');
content = content.replace(/{user_last_message_timestamp}/g, interaction.channel.messages.cache.find(m => m.author.id === interaction.user.id)?.createdTimestamp || 'None');
content = content.replace(/{user_boost_count}/g, interaction.member.premiumSubscriptionCount || '0');
content = content.replace(/{user_flags}/g, interaction.user.flags.toArray().join(', '));
content = content.replace(/{user_accent_color}/g, interaction.user.accentColor || 'None');
content = content.replace(/{user_banner_url}/g, interaction.user.bannerURL({ dynamic: true }) || 'None');
content = content.replace(/{user_public_flags}/g, interaction.user.publicFlags.toArray().join(', '));
content = content.replace(/{user_avatar_decoration}/g, interaction.user.avatarDecoration || 'None');
content = content.replace(/{user_discriminator_placement}/g, interaction.user.discriminatorPlacement || 'None');
content = content.replace(/{user_banner_color}/g, interaction.user.hexAccentColor || 'None');
content = content.replace(/{user_locale}/g, interaction.locale);
content = content.replace(/{user_guild_locale}/g, interaction.guildLocale);
content = content.replace(/{user_guild_boost_count}/g, interaction.guild.premiumSubscriptionCount || '0');
content = content.replace(/{user_guild_boost_tier}/g, interaction.guild.premiumTier || '0');
content = content.replace(/{user_guild_boost_progress}/g, interaction.guild.premiumProgressBarEnabled ? 'Enabled' : 'Disabled');
content = content.replace(/{user_guild_boost_progress_bar}/g, interaction.guild.premiumProgressBarEnabled ? interaction.guild.premiumProgressBar : 'None');
content = content.replace(/{user_balance}/g, getUserBalance(interaction.user.id));
content = content.replace(/{user_bank}/g, getUserBankBalance(interaction.user.id));
content = content.replace(/{user_inventory}/g, getUserInventory(interaction.user.id));
content = content.replace(/{user_items}/g, getUserItems(interaction.user.id));
content = content.replace(/{user_items_count}/g, getUserItemsCount(interaction.user.id));
content = content.replace(/{user_items_value}/g, getUserItemsValue(interaction.user.id));
content = content.replace(/{user_daily_streak}/g, getUserDailyStreak(interaction.user.id));
content = content.replace(/{user_weekly_streak}/g, getUserWeeklyStreak(interaction.user.id));
content = content.replace(/{user_monthly_streak}/g, getUserMonthlyStreak(interaction.user.id));
content = content.replace(/{user_yearly_streak}/g, getUserYearlyStreak(interaction.user.id));
content = content.replace(/{user_total_income}/g, getUserTotalIncome(interaction.user.id));
content = content.replace(/{user_total_expenses}/g, getUserTotalExpenses(interaction.user.id));
content = content.replace(/{user_total_transactions}/g, getUserTotalTransactions(interaction.user.id));
content = content.replace(/{user_last_daily}/g, getUserLastDaily(interaction.user.id));
content = content.replace(/{user_last_weekly}/g, getUserLastWeekly(interaction.user.id));
content = content.replace(/{user_last_monthly}/g, getUserLastMonthly(interaction.user.id));
content = content.replace(/{user_last_yearly}/g, getUserLastYearly(interaction.user.id));
content = content.replace(/{user_last_work}/g, getUserLastWork(interaction.user.id));
content = content.replace(/{user_last_crime}/g, getUserLastCrime(interaction.user.id));
content = content.replace(/{user_last_rob}/g, getUserLastRob(interaction.user.id));
content = content.replace(/{user_last_gamble}/g, getUserLastGamble(interaction.user.id));
content = content.replace(/{user_last_purchase}/g, getUserLastPurchase(interaction.user.id));
content = content.replace(/{user_last_sale}/g, getUserLastSale(interaction.user.id));
content = content.replace(/{user_last_gift}/g, getUserLastGift(interaction.user.id));
content = content.replace(/{user_last_transfer}/g, getUserLastTransfer(interaction.user.id));
content = content.replace(/{user_work_level}/g, getUserWorkLevel(interaction.user.id));
content = content.replace(/{user_crime_level}/g, getUserCrimeLevel(interaction.user.id));
content = content.replace(/{user_rob_level}/g, getUserRobLevel(interaction.user.id));
content = content.replace(/{user_gamble_level}/g, getUserGambleLevel(interaction.user.id));
content = content.replace(/{user_total_work}/g, getUserTotalWork(interaction.user.id));
content = content.replace(/{user_total_crime}/g, getUserTotalCrime(interaction.user.id));
content = content.replace(/{user_total_rob}/g, getUserTotalRob(interaction.user.id));
content = content.replace(/{user_total_gamble}/g, getUserTotalGamble(interaction.user.id));
content = content.replace(/{user_work_income}/g, getUserWorkIncome(interaction.user.id));
content = content.replace(/{user_crime_income}/g, getUserCrimeIncome(interaction.user.id));
content = content.replace(/{user_rob_income}/g, getUserRobIncome(interaction.user.id));
content = content.replace(/{user_gamble_income}/g, getUserGambleIncome(interaction.user.id));
content = content.replace(/{user_work_expenses}/g, getUserWorkExpenses(interaction.user.id));
content = content.replace(/{user_crime_expenses}/g, getUserCrimeExpenses(interaction.user.id));
content = content.replace(/{user_rob_expenses}/g, getUserRobExpenses(interaction.user.id));
content = content.replace(/{user_gamble_expenses}/g, getUserGambleExpenses(interaction.user.id));
content = content.replace(/{user_total_gifts}/g, getUserTotalGifts(interaction.user.id));
content = content.replace(/{user_total_purchases}/g, getUserTotalPurchases(interaction.user.id));
content = content.replace(/{user_total_sales}/g, getUserTotalSales(interaction.user.id));
content = content.replace(/{user_total_transfers}/g, getUserTotalTransfers(interaction.user.id));
content = content.replace(/{user_purchase_expenses}/g, getUserPurchaseExpenses(interaction.user.id));
content = content.replace(/{user_sale_income}/g, getUserSaleIncome(interaction.user.id));
content = content.replace(/{user_gift_expenses}/g, getUserGiftExpenses(interaction.user.id));
content = content.replace(/{user_transfer_expenses}/g, getUserTransferExpenses(interaction.user.id));
content = content.replace(/{user_transfer_income}/g, getUserTransferIncome(interaction.user.id));
content = content.replace(/{server_total_balance}/g, getServerTotalBalance(interaction.guild.id));
content = content.replace(/{server_total_bank}/g, getServerTotalBankBalance(interaction.guild.id));
content = content.replace(/{server_total_income}/g, getServerTotalIncome(interaction.guild.id));
content = content.replace(/{server_total_expenses}/g, getServerTotalExpenses(interaction.guild.id));
content = content.replace(/{server_total_transactions}/g, getServerTotalTransactions(interaction.guild.id));
content = content.replace(/{server_total_work}/g, getServerTotalWork(interaction.guild.id));
content = content.replace(/{server_total_crime}/g, getServerTotalCrime(interaction.guild.id));
content = content.replace(/{server_total_rob}/g, getServerTotalRob(interaction.guild.id));
content = content.replace(/{server_total_gamble}/g, getServerTotalGamble(interaction.guild.id));
content = content.replace(/{server_total_gifts}/g, getServerTotalGifts(interaction.guild.id));
content = content.replace(/{server_total_purchases}/g, getServerTotalPurchases(interaction.guild.id));
content = content.replace(/{server_total_sales}/g, getServerTotalSales(interaction.guild.id));
content = content.replace(/{server_total_transfers}/g, getServerTotalTransfers(interaction.guild.id));
content = content.replace(/{server_richest_user}/g, getServerRichestUser(interaction.guild.id));
content = content.replace(/{server_poorest_user}/g, getServerPoorestUser(interaction.guild.id));
content = content.replace(/{server_most_items_user}/g, getServerMostItemsUser(interaction.guild.id));
content = content.replace(/{server_least_items_user}/g, getServerLeastItemsUser(interaction.guild.id));
content = content.replace(/{server_highest_level_user}/g, getServerHighestLevelUser(interaction.guild.id));
content = content.replace(/{server_lowest_level_user}/g, getServerLowestLevelUser(interaction.guild.id));
content = content.replace(/{server_most_active_user}/g, getServerMostActiveUser(interaction.guild.id));
content = content.replace(/{server_least_active_user}/g, getServerLeastActiveUser(interaction.guild.id));
content = content.replace(/{global_total_balance}/g, getGlobalTotalBalance());
content = content.replace(/{global_total_bank}/g, getGlobalTotalBankBalance());
content = content.replace(/{global_total_income}/g, getGlobalTotalIncome());
content = content.replace(/{global_total_expenses}/g, getGlobalTotalExpenses());
content = content.replace(/{global_total_transactions}/g, getGlobalTotalTransactions());
content = content.replace(/{global_total_work}/g, getGlobalTotalWork());
content = content.replace(/{global_total_crime}/g, getGlobalTotalCrime());
content = content.replace(/{global_total_rob}/g, getGlobalTotalRob());
content = content.replace(/{global_total_gamble}/g, getGlobalTotalGamble());
content = content.replace(/{global_total_gifts}/g, getGlobalTotalGifts());
content = content.replace(/{global_total_purchases}/g, getGlobalTotalPurchases());
content = content.replace(/{global_total_sales}/g, getGlobalTotalSales());
content = content.replace(/{global_total_transfers}/g, getGlobalTotalTransfers());
content = content.replace(/{global_richest_user}/g, getGlobalRichestUser());
content = content.replace(/{global_poorest_user}/g, getGlobalPoorestUser());
content = content.replace(/{global_most_items_user}/g, getGlobalMostItemsUser());
content = content.replace(/{global_least_items_user}/g, getGlobalLeastItemsUser());
content = content.replace(/{global_highest_level_user}/g, getGlobalHighestLevelUser());
content = content.replace(/{global_lowest_level_user}/g, getGlobalLowestLevelUser());
content = content.replace(/{global_most_active_user}/g, getGlobalMostActiveUser());
content = content.replace(/{global_least_active_user}/g, getGlobalLeastActiveUser());
content = content.replace(/{server_name}/g, interaction.guild.name);
content = content.replace(/{server_id}/g, interaction.guild.id);
content = content.replace(/{server_memberCount}/g, interaction.guild.memberCount.toString());
content = content.replace(/{server_createdAt}/g, interaction.guild.createdAt.toDateString());
content = content.replace(/{server_ownerId}/g, interaction.guild.ownerId);
content = content.replace(/{server_region}/g, interaction.guild.region);
content = content.replace(/{server_verificationLevel}/g, interaction.guild.verificationLevel);
content = content.replace(/{server_afkTimeout}/g, interaction.guild.afkTimeout.toString());
content = content.replace(/{server_afkChannelId}/g, interaction.guild.afkChannelId);
content = content.replace(/{server_systemChannelId}/g, interaction.guild.systemChannelId);
content = content.replace(/{server_icon}/g, interaction.guild.iconURL());
content = content.replace(/{server_splash}/g, interaction.guild.splashURL());
content = content.replace(/{server_banner}/g, interaction.guild.bannerURL());
content = content.replace(/{server_rulesChannelId}/g, interaction.guild.rulesChannelId);
content = content.replace(/{server_publicUpdatesChannelId}/g, interaction.guild.publicUpdatesChannelId);
content = content.replace(/{server_preferredLocale}/g, interaction.guild.preferredLocale);
content = content.replace(/{server_premiumTier}/g, interaction.guild.premiumTier.toString());
content = content.replace(/{server_premiumSubscriptionCount}/g, interaction.guild.premiumSubscriptionCount.toString());
content = content.replace(/{server_maxMembers}/g, interaction.guild.maximumMembers.toString());
content = content.replace(/{server_maxPresences}/g, interaction.guild.maximumPresences.toString());
content = content.replace(/{server_approximateMemberCount}/g, interaction.guild.approximateMemberCount.toString());
content = content.replace(/{server_approximatePresenceCount}/g, interaction.guild.approximatePresenceCount.toString());
content = content.replace(/{server_vanityURLCode}/g, interaction.guild.vanityURLCode);
content = content.replace(/{server_description}/g, interaction.guild.description);
content = content.replace(/{server_mfaLevel}/g, interaction.guild.mfaLevel.toString());
content = content.replace(/{server_nsfwLevel}/g, interaction.guild.nsfwLevel);
content = content.replace(/{server_explicitContentFilter}/g, interaction.guild.explicitContentFilter.toString());
content = content.replace(/{server_defaultMessageNotifications}/g, interaction.guild.defaultMessageNotifications.toString());
content = content.replace(/{server_premiumProgressBarEnabled}/g, interaction.guild.premiumProgressBarEnabled.toString());
content = content.replace(/{server_verified}/g, interaction.guild.verified.toString());
content = content.replace(/{server_partnered}/g, interaction.guild.partnered.toString());
content = content.replace(/{server_available}/g, interaction.guild.available.toString());
content = content.replace(/{server_large}/g, interaction.guild.large.toString());
content = content.replace(/{server_joinedAt}/g, interaction.guild.joinedAt.toDateString());
content = content.replace(/{server_shardId}/g, interaction.guild.shardId.toString());
content = content.replace(/{server_channels_size}/g, interaction.guild.channels.cache.size.toString());
content = content.replace(/{server_roles_size}/g, interaction.guild.roles.cache.size.toString());
content = content.replace(/{server_emojis_size}/g, interaction.guild.emojis.cache.size.toString());
content = content.replace(/{server_stickers_size}/g, interaction.guild.stickers.cache.size.toString());
content = content.replace(/{server_voiceStates_size}/g, interaction.guild.voiceStates.cache.size.toString());
content = content.replace(/{server_stagInstances_size}/g, interaction.guild.stageInstances.cache.size.toString());
content = content.replace(/{server_invites_size}/g, interaction.guild.invites.cache.size.toString());
content = content.replace(/{server_scheduledEvents_size}/g, interaction.guild.scheduledEvents.cache.size.toString());
content = content.replace(/{server_bans_size}/g, interaction.guild.bans.cache.size.toString());
content = content.replace(/{user_id}/g, interaction.user.id);
content = content.replace(/{user_tag}/g, interaction.user.tag);
content = content.replace(/{user_username}/g, interaction.user.username);
content = content.replace(/{user_discriminator}/g, interaction.user.discriminator);
content = content.replace(/{user_avatar}/g, interaction.user.avatarURL());
content = content.replace(/{user_bot}/g, interaction.user.bot.toString());
content = content.replace(/{user_system}/g, interaction.user.system.toString());
content = content.replace(/{user_createdAt}/g, interaction.user.createdAt.toDateString());
content = content.replace(/{user_createdTimestamp}/g, interaction.user.createdTimestamp.toString());
content = content.replace(/{user_defaultAvatarURL}/g, interaction.user.defaultAvatarURL);
content = content.replace(/{user_hexAccentColor}/g, interaction.user.hexAccentColor);
content = content.replace(/{user_flags}/g, interaction.user.flags.toArray().join(', '));
content = content.replace(/{user_banner}/g, interaction.user.bannerURL());
content = content.replace(/{user_accentColor}/g, interaction.user.accentColor);
content = content.replace(/{member_id}/g, interaction.member.id);
content = content.replace(/{member_displayName}/g, interaction.member.displayName);
content = content.replace(/{member_joinedAt}/g, interaction.member.joinedAt.toDateString());
content = content.replace(/{member_joinedTimestamp}/g, interaction.member.joinedTimestamp.toString());
content = content.replace(/{member_nickname}/g, interaction.member.nickname);
content = content.replace(/{member_premiumSince}/g, interaction.member.premiumSince ? interaction.member.premiumSince.toDateString() : 'N/A');
content = content.replace(/{member_premiumSinceTimestamp}/g, interaction.member.premiumSinceTimestamp ? interaction.member.premiumSinceTimestamp.toString() : 'N/A');
content = content.replace(/{member_roles}/g, interaction.member.roles.cache.map(role => role.name).join(', '));
content = content.replace(/{member_roles_size}/g, interaction.member.roles.cache.size.toString());
content = content.replace(/{member_highestRole}/g, interaction.member.roles.highest.name);
content = content.replace(/{member_displayColor}/g, interaction.member.displayHexColor);
content = content.replace(/{member_permissions}/g, interaction.member.permissions.toArray().join(', '));
content = content.replace(/{member_manageable}/g, interaction.member.manageable.toString());
content = content.replace(/{member_kickable}/g, interaction.member.kickable.toString());
content = content.replace(/{member_bannable}/g, interaction.member.bannable.toString());
content = content.replace(/{member_moderatable}/g, interaction.member.moderatable.toString());
content = content.replace(/{member_voice_channelId}/g, interaction.member.voice.channelId);
content = content.replace(/{member_voice_channel}/g, interaction.member.voice.channel ? interaction.member.voice.channel.name : 'N/A');
content = content.replace(/{member_voice_sessionId}/g, interaction.member.voice.sessionId);
content = content.replace(/{member_voice_selfDeaf}/g, interaction.member.voice.selfDeaf.toString());
content = content.replace(/{member_voice_selfMute}/g, interaction.member.voice.selfMute.toString());
content = content.replace(/{member_voice_selfVideo}/g, interaction.member.voice.selfVideo.toString());
content = content.replace(/{member_voice_serverDeaf}/g, interaction.member.voice.serverDeaf.toString());
content = content.replace(/{member_voice_serverMute}/g, interaction.member.voice.serverMute.toString());
content = content.replace(/{member_voice_suppress}/g, interaction.member.voice.suppress.toString());
content = content.replace(/{member_voice_requestToSpeakTimestamp}/g, interaction.member.voice.requestToSpeakTimestamp ? interaction.member.voice.requestToSpeakTimestamp.toString() : 'N/A');
content = content.replace(/{member_voice_streaming}/g, interaction.member.voice.streaming.toString());
content = content.replace(/{channel_id}/g, interaction.channel.id);
content = content.replace(/{channel_name}/g, interaction.channel.name);
content = content.replace(/{channel_type}/g, interaction.channel.type);
content = content.replace(/{channel_topic}/g, interaction.channel.topic);
content = content.replace(/{channel_createdAt}/g, interaction.channel.createdAt.toDateString());
content = content.replace(/{channel_createdTimestamp}/g, interaction.channel.createdTimestamp.toString());
content = content.replace(/{channel_parentId}/g, interaction.channel.parentId);
content = content.replace(/{channel_position}/g, interaction.channel.position.toString());
content = content.replace(/{channel_permissionOverwrites_size}/g, interaction.channel.permissionOverwrites.cache.size.toString());
content = content.replace(/{channel_nsfw}/g, interaction.channel.nsfw.toString());
content = content.replace(/{channel_lastMessageId}/g, interaction.channel.lastMessageId);
content = content.replace(/{channel_lastPinTimestamp}/g, interaction.channel.lastPinTimestamp ? interaction.channel.lastPinTimestamp.toString() : 'N/A');
content = content.replace(/{channel_rateLimitPerUser}/g, interaction.channel.rateLimitPerUser.toString());
content = content.replace(/{channel_threads_size}/g, interaction.channel.threads.cache.size.toString());
content = content.replace(/{channel_memberCount}/g, interaction.channel.members.size.toString());
content = content.replace(/{channel_messages_size}/g, interaction.channel.messages.cache.size.toString());
content = content.replace(/{role_id}/g, interaction.guild.roles.cache.first().id);
content = content.replace(/{role_name}/g, interaction.guild.roles.cache.first().name);
content = content.replace(/{role_color}/g, interaction.guild.roles.cache.first().hexColor);
content = content.replace(/{role_hoist}/g, interaction.guild.roles.cache.first().hoist.toString());
content = content.replace(/{role_position}/g, interaction.guild.roles.cache.first().position.toString());
content = content.replace(/{role_mentionable}/g, interaction.guild.roles.cache.first().mentionable.toString());
content = content.replace(/{role_permissions}/g, interaction.guild.roles.cache.first().permissions.toArray().join(', '));
content = content.replace(/{role_managed}/g, interaction.guild.roles.cache.first().managed.toString());
content = content.replace(/{role_tags}/g, interaction.guild.roles.cache.first().tags ? JSON.stringify(interaction.guild.roles.cache.first().tags) : 'N/A');
content = content.replace(/{role_createdAt}/g, interaction.guild.roles.cache.first().createdAt.toDateString());
content = content.replace(/{role_createdTimestamp}/g, interaction.guild.roles.cache.first().createdTimestamp.toString());
content = content.replace(/{role_hexColor}/g, interaction.guild.roles.cache.first().hexColor);
content = content.replace(/{role_members_size}/g, interaction.guild.roles.cache.first().members.size.toString());
content = content.replace(/{role_editable}/g, interaction.guild.roles.cache.first().editable.toString());
content = content.replace(/{emoji_id}/g, interaction.guild.emojis.cache.first().id);
content = content.replace(/{emoji_name}/g, interaction.guild.emojis.cache.first().name);
content = content.replace(/{emoji_identifier}/g, interaction.guild.emojis.cache.first().identifier);
content = content.replace(/{emoji_url}/g, interaction.guild.emojis.cache.first().url);
content = content.replace(/{emoji_createdAt}/g, interaction.guild.emojis.cache.first().createdAt.toDateString());
content = content.replace(/{emoji_createdTimestamp}/g, interaction.guild.emojis.cache.first().createdTimestamp.toString());
content = content.replace(/{emoji_available}/g, interaction.guild.emojis.cache.first().available.toString());
content = content.replace(/{emoji_requireColons}/g, interaction.guild.emojis.cache.first().requireColons.toString());
content = content.replace(/{emoji_managed}/g, interaction.guild.emojis.cache.first().managed.toString());
content = content.replace(/{emoji_animated}/g, interaction.guild.emojis.cache.first().animated.toString());
content = content.replace(/{emoji_deletable}/g, interaction.guild.emojis.cache.first().deletable.toString());
content = content.replace(/{sticker_id}/g, interaction.guild.stickers.cache.first().id);
content = content.replace(/{sticker_name}/g, interaction.guild.stickers.cache.first().name);
content = content.replace(/{sticker_description}/g, interaction.guild.stickers.cache.first().description);
content = content.replace(/{sticker_tags}/g, interaction.guild.stickers.cache.first().tags.join(', '));
content = content.replace(/{sticker_type}/g, interaction.guild.stickers.cache.first().type);
content = content.replace(/{sticker_format}/g, interaction.guild.stickers.cache.first().format);
content = content.replace(/{sticker_available}/g, interaction.guild.stickers.cache.first().available.toString());
content = content.replace(/{sticker_guildId}/g, interaction.guild.stickers.cache.first().guildId);
content = content.replace(/{sticker_user}/g, interaction.guild.stickers.cache.first().user ? interaction.guild.stickers.cache.first().user.tag : 'N/A');
content = content.replace(/{sticker_createdAt}/g, interaction.guild.stickers.cache.first().createdAt.toDateString());
content = content.replace(/{sticker_createdTimestamp}/g, interaction.guild.stickers.cache.first().createdTimestamp.toString());
content = content.replace(/{sticker_url}/g, interaction.guild.stickers.cache.first().url);
content = content.replace(/{invite_code}/g, interaction.guild.invites.cache.first().code);
content = content.replace(/{invite_url}/g, interaction.guild.invites.cache.first().url);
content = content.replace(/{invite_uses}/g, interaction.guild.invites.cache.first().uses.toString());
content = content.replace(/{user_warns}/g, getUserWarns(interaction.user.id));
content = content.replace(/{user_warns_count}/g, getUserWarnsCount(interaction.user.id));
content = content.replace(/{user_warns_list}/g, getUserWarnsList(interaction.user.id));
content = content.replace(/{user_warns_latest}/g, getUserWarnsLatest(interaction.user.id));
content = content.replace(/{user_warns_latest_reason}/g, getUserWarnsLatestReason(interaction.user.id));
content = content.replace(/{user_warns_latest_moderator}/g, getUserWarnsLatestModerator(interaction.user.id));
content = content.replace(/{user_warns_latest_timestamp}/g, getUserWarnsLatestTimestamp(interaction.user.id));
content = content.replace(/{user_mutes}/g, getUserMutes(interaction.user.id));
content = content.replace(/{user_mutes_count}/g, getUserMutesCount(interaction.user.id));
content = content.replace(/{user_mutes_list}/g, getUserMutesList(interaction.user.id));
content = content.replace(/{user_mutes_latest}/g, getUserMutesLatest(interaction.user.id));
content = content.replace(/{user_mutes_latest_reason}/g, getUserMutesLatestReason(interaction.user.id));
content = content.replace(/{user_mutes_latest_moderator}/g, getUserMutesLatestModerator(interaction.user.id));
content = content.replace(/{user_mutes_latest_timestamp}/g, getUserMutesLatestTimestamp(interaction.user.id));
content = content.replace(/{user_mutes_latest_duration}/g, getUserMutesLatestDuration(interaction.user.id));
content = content.replace(/{user_kicks}/g, getUserKicks(interaction.user.id));
content = content.replace(/{user_kicks_count}/g, getUserKicksCount(interaction.user.id));
content = content.replace(/{user_kicks_list}/g, getUserKicksList(interaction.user.id));
content = content.replace(/{user_kicks_latest}/g, getUserKicksLatest(interaction.user.id));
content = content.replace(/{user_kicks_latest_reason}/g, getUserKicksLatestReason(interaction.user.id));
content = content.replace(/{user_kicks_latest_moderator}/g, getUserKicksLatestModerator(interaction.user.id));
content = content.replace(/{user_kicks_latest_timestamp}/g, getUserKicksLatestTimestamp(interaction.user.id));
content = content.replace(/{user_bans}/g, getUserBans(interaction.user.id));
content = content.replace(/{user_bans_count}/g, getUserBansCount(interaction.user.id));
content = content.replace(/{user_bans_list}/g, getUserBansList(interaction.user.id));
content = content.replace(/{user_bans_latest}/g, getUserBansLatest(interaction.user.id));
content = content.replace(/{user_bans_latest_reason}/g, getUserBansLatestReason(interaction.user.id));
content = content.replace(/{user_bans_latest_moderator}/g, getUserBansLatestModerator(interaction.user.id));
content = content.replace(/{user_bans_latest_timestamp}/g, getUserBansLatestTimestamp(interaction.user.id));
content = content.replace(/{user_bans_latest_duration}/g, getUserBansLatestDuration(interaction.user.id));
content = content.replace(/{user_timeouts}/g, getUserTimeouts(interaction.user.id));
content = content.replace(/{user_timeouts_count}/g, getUserTimeoutsCount(interaction.user.id));
content = content.replace(/{user_timeouts_list}/g, getUserTimeoutsList(interaction.user.id));
content = content.replace(/{user_timeouts_latest}/g, getUserTimeoutsLatest(interaction.user.id));
content = content.replace(/{user_timeouts_latest_reason}/g, getUserTimeoutsLatestReason(interaction.user.id));
content = content.replace(/{user_timeouts_latest_moderator}/g, getUserTimeoutsLatestModerator(interaction.user.id));
content = content.replace(/{user_timeouts_latest_timestamp}/g, getUserTimeoutsLatestTimestamp(interaction.user.id));
content = content.replace(/{user_timeouts_latest_duration}/g, getUserTimeoutsLatestDuration(interaction.user.id));
content = content.replace(/{server_moderation_cases}/g, getServerModerationCases(interaction.guild.id));
content = content.replace(/{server_moderation_cases_count}/g, getServerModerationCasesCount(interaction.guild.id));
content = content.replace(/{server_moderation_cases_list}/g, getServerModerationCasesList(interaction.guild.id));
content = content.replace(/{server_moderation_cases_latest}/g, getServerModerationCasesLatest(interaction.guild.id));
content = content.replace(/{server_moderation_cases_latest_type}/g, getServerModerationCasesLatestType(interaction.guild.id));
content = content.replace(/{server_moderation_cases_latest_reason}/g, getServerModerationCasesLatestReason(interaction.guild.id));
content = content.replace(/{server_moderation_cases_latest_moderator}/g, getServerModerationCasesLatestModerator(interaction.guild.id));
content = content.replace(/{server_moderation_cases_latest_timestamp}/g, getServerModerationCasesLatestTimestamp(interaction.guild.id));
content = content.replace(/{server_moderation_cases_latest_duration}/g, getServerModerationCasesLatestDuration(interaction.guild.id));
content = content.replace(/{server_moderation_cases_latest_user}/g, getServerModerationCasesLatestUser(interaction.guild.id));
content = content.replace(/{server_moderation_cases_warns}/g, getServerModerationCasesWarns(interaction.guild.id));
content = content.replace(/{server_moderation_cases_warns_count}/g, getServerModerationCasesWarnsCount(interaction.guild.id));
content = content.replace(/{server_moderation_cases_warns_list}/g, getServerModerationCasesWarnsList(interaction.guild.id));
content = content.replace(/{server_moderation_cases_warns_latest}/g, getServerModerationCasesWarnsLatest(interaction.guild.id));
content = content.replace(/{server_moderation_cases_warns_latest_reason}/g, getServerModerationCasesWarnsLatestReason(interaction.guild.id));
content = content.replace(/{server_moderation_cases_warns_latest_moderator}/g, getServerModerationCasesWarnsLatestModerator(interaction.guild.id));
content = content.replace(/{server_moderation_cases_warns_latest_timestamp}/g, getServerModerationCasesWarnsLatestTimestamp(interaction.guild.id));
content = content.replace(/{server_moderation_cases_warns_latest_user}/g, getServerModerationCasesWarnsLatestUser(interaction.guild.id));
content = content.replace(/{server_moderation_cases_mutes}/g, getServerModerationCasesMutes(interaction.guild.id));
content = content.replace(/{server_moderation_cases_mutes_count}/g, getServerModerationCasesMutesCount(interaction.guild.id));
content = content.replace(/{server_moderation_cases_mutes_list}/g, getServerModerationCasesMutesList(interaction.guild.id));
content = content.replace(/{server_moderation_cases_mutes_latest}/g, getServerModerationCasesMutesLatest(interaction.guild.id));
content = content.replace(/{server_moderation_cases_mutes_latest_reason}/g, getServerModerationCasesMutesLatestReason(interaction.guild.id));
content = content.replace(/{server_moderation_cases_mutes_latest_moderator}/g, getServerModerationCasesMutesLatestModerator(interaction.guild.id));
content = content.replace(/{server_moderation_cases_mutes_latest_timestamp}/g, getServerModerationCasesMutesLatestTimestamp(interaction.guild.id));
content = content.replace(/{server_moderation_cases_mutes_latest_duration}/g, getServerModerationCasesMutesLatestDuration(interaction.guild.id));
content = content.replace(/{server_moderation_cases_mutes_latest_user}/g, getServerModerationCasesMutesLatestUser(interaction.guild.id));
content = content.replace(/{server_moderation_cases_kicks}/g, getServerModerationCasesKicks(interaction.guild.id));
content = content.replace(/{server_moderation_cases_kicks_count}/g, getServerModerationCasesKicksCount(interaction.guild.id));
content = content.replace(/{server_moderation_cases_kicks_list}/g, getServerModerationCasesKicksList(interaction.guild.id));
content = content.replace(/{server_moderation_cases_kicks_latest}/g, getServerModerationCasesKicksLatest(interaction.guild.id));
content = content.replace(/{server_moderation_cases_kicks_latest_reason}/g, getServerModerationCasesKicksLatestReason(interaction.guild.id));
content = content.replace(/{server_moderation_cases_kicks_latest_moderator}/g, getServerModerationCasesKicksLatestModerator(interaction.guild.id));
content = content.replace(/{server_moderation_cases_kicks_latest_timestamp}/g, getServerModerationCasesKicksLatestTimestamp(interaction.guild.id));
content = content.replace(/{server_moderation_cases_kicks_latest_user}/g, getServerModerationCasesKicksLatestUser(interaction.guild.id));
content = content.replace(/{server_moderation_cases_bans}/g, getServerModerationCasesBans(interaction.guild.id));
content = content.replace(/{server_moderation_cases_bans_count}/g, getServerModerationCasesBansCount(interaction.guild.id));
content = content.replace(/{server_moderation_cases_bans_list}/g, getServerModerationCasesBansList(interaction.guild.id));
content = content.replace(/{server_moderation_cases_bans_latest}/g, getServerModerationCasesBansLatest(interaction.guild.id));
content = content.replace(/{server_moderation_cases_bans_latest_reason}/g, getServerModerationCasesBansLatestReason(interaction.guild.id));
content = content.replace(/{server_moderation_cases_bans_latest_moderator}/g, getServerModerationCasesBansLatestModerator(interaction.guild.id));
content = content.replace(/{server_moderation_cases_bans_latest_timestamp}/g, getServerModerationCasesBansLatestTimestamp(interaction.guild.id));
content = content.replace(/{server_moderation_cases_bans_latest_duration}/g, getServerModerationCasesBansLatestDuration(interaction.guild.id));
content = content.replace(/{server_moderation_cases_bans_latest_user}/g, getServerModerationCasesBansLatestUser(interaction.guild.id));
content = content.replace(/{server_moderation_cases_timeouts}/g, getServerModerationCasesTimeouts(interaction.guild.id));
content = content.replace(/{server_moderation_cases_timeouts_count}/g, getServerModerationCasesTimeoutsCount(interaction.guild.id));
content = content.replace(/{server_moderation_cases_timeouts_list}/g, getServerModerationCasesTimeoutsList(interaction.guild.id));
content = content.replace(/{server_moderation_cases_timeouts_latest}/g, getServerModerationCasesTimeoutsLatest(interaction.guild.id));
content = content.replace(/{server_moderation_cases_timeouts_latest_reason}/g, getServerModerationCasesTimeoutsLatestReason(interaction.guild.id));
content = content.replace(/{server_moderation_cases_timeouts_latest_moderator}/g, getServerModerationCasesTimeoutsLatestModerator(interaction.guild.id));
content = content.replace(/{server_moderation_cases_timeouts_latest_timestamp}/g, getServerModerationCasesTimeoutsLatestTimestamp(interaction.guild.id));
content = content.replace(/{server_moderation_cases_timeouts_latest_duration}/g, getServerModerationCasesTimeoutsLatestDuration(interaction.guild.id));
content = content.replace(/{server_moderation_cases_timeouts_latest_user}/g, getServerModerationCasesTimeoutsLatestUser(interaction.guild.id));
